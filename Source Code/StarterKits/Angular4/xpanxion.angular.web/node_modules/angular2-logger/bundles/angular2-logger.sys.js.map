{"version":3,"file":"angular2-logger.sys.js","sourceRoot":"","sources":["../app/core/level.ts","../app/core/logger.ts","../app/core/providers.ts","../core.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by Langley on 3/13/2016.\r\n */\r\n\r\n/**\r\n * The available options to set the Level of the Logger.\r\n * See {@link Logger}.\r\n */\r\nexport enum Level { OFF = 0, ERROR = 1, WARN = 2, INFO = 3, DEBUG = 4, LOG = 5 }","import {Injectable, Optional} from \"@angular/core\";\r\nimport {Level} from \"./level\";\r\n\r\n/**\r\n * Logger options.\r\n * See {@link Logger}.\r\n *\r\n * level - How much detail you want to see in the logs, 0 being off, 1 being the less detailed, 5 being the most. Defaults to WARN.\r\n * global - Whether you want the created logger object to be exposed in the global scope. Defaults to true.\r\n * globalAs - The window's property name that will hold the logger object created. Defaults to 'logger'.\r\n * store - Whether you want the level config to be saved in the local storage so it doesn't get lost when you refresh. Defaults to false.\r\n * storeAs - The local storage key that will be used to save the level config if the store setting is true. Defaults to 'angular2.logger.level'.\r\n *\r\n * Created by Langley on 3/23/2016.\r\n *\r\n */\r\nexport class Options {\r\n    level: Level;\r\n    global: boolean;\r\n    globalAs: string;\r\n    store: boolean;\r\n    storeAs: string;\r\n}\r\n\r\n// For browsers that don't implement the debug method, log will be used instead. Fixes #62.\r\nconst CONSOLE_DEBUG_METHOD = console[\"debug\"] ? \"debug\" : \"log\";\r\n\r\n// Temporal until https://github.com/angular/angular/issues/7344 gets fixed.\r\nconst DEFAULT_OPTIONS: Options = {\r\n    level: Level.WARN,\r\n    global: true,\r\n    globalAs: \"logger\",\r\n    store: false,\r\n    storeAs: \"angular2.logger.level\"\r\n};\r\n\r\n@Injectable()\r\nexport class Logger {\r\n\r\n    private _level: Level;\r\n    private _globalAs: string;\r\n    private _store: boolean;\r\n    private _storeAs: string;\r\n\r\n    public Level: any = Level;\r\n\r\n    constructor( @Optional() options?: Options ) {\r\n\r\n        // Move this to the constructor definition when optional parameters are working with @Injectable: https://github.com/angular/angular/issues/7344\r\n        let { level, global, globalAs, store, storeAs } = Object.assign( {}, DEFAULT_OPTIONS, options );\r\n\r\n        this._level = level;\r\n        this._globalAs = globalAs;\r\n        this._storeAs = storeAs;\r\n\r\n        global && this.global();\r\n\r\n        if ( store || this._loadLevel() ) this.store();\r\n\r\n    }\r\n\r\n    private _loadLevel = (): Level => Number(localStorage.getItem( this._storeAs ));\r\n\r\n    private _storeLevel(level: Level) { localStorage[ this._storeAs ] = level; }\r\n\r\n    error(message?: any, ...optionalParams: any[]) {\r\n        this.isErrorEnabled() && console.error.apply( console, arguments );\r\n    }\r\n\r\n    warn(message?: any, ...optionalParams: any[]) {\r\n        this.isWarnEnabled() && console.warn.apply( console, arguments );\r\n    }\r\n\r\n    info(message?: any, ...optionalParams: any[]) {\r\n        this.isInfoEnabled() && console.info.apply( console, arguments );\r\n    }\r\n\r\n    debug(message?: any, ...optionalParams: any[]) {\r\n        this.isDebugEnabled() && ( <any> console )[ CONSOLE_DEBUG_METHOD ].apply( console, arguments );\r\n    }\r\n\r\n    log(message?: any, ...optionalParams: any[]) {\r\n        this.isLogEnabled() && console.log.apply( console, arguments );\r\n    }\r\n\r\n    global = () => ( <any> window )[this._globalAs] = this;\r\n\r\n    store(): Logger {\r\n\r\n        this._store = true;\r\n        let storedLevel = this._loadLevel();\r\n        if ( storedLevel ) { this._level = storedLevel; }\r\n        else { this._storeLevel( this.level ); }\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    unstore(): Logger {\r\n        this._store = false;\r\n        localStorage.removeItem( this._storeAs );\r\n        return this;\r\n    }\r\n\r\n    isErrorEnabled = (): boolean => this.level >= Level.ERROR;\r\n    isWarnEnabled = (): boolean => this.level >= Level.WARN;\r\n    isInfoEnabled = (): boolean => this.level >= Level.INFO;\r\n    isDebugEnabled = (): boolean => this.level >= Level.DEBUG;\r\n    isLogEnabled = (): boolean => this.level >= Level.LOG;\r\n\r\n    get level(): Level { return this._level; }\r\n\r\n    set level(level: Level) {\r\n        this._store && this._storeLevel(level);\r\n        this._level = level;\r\n    }\r\n\r\n}\r\n","import {Options, Logger} from \"./logger\";\r\nimport {Level} from \"./level\";\r\n\r\n/**\r\n * Custom Providers if the user wants to avoid some configuration for common scenarios.\r\n * @type {Provider|Logger[]}\r\n *\r\n * Created by Langley on 8/24/2016.\r\n */\r\nexport const OFF_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.OFF } }, Logger ];\r\nexport const ERROR_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.ERROR } }, Logger ];\r\nexport const WARN_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.WARN } }, Logger ];\r\nexport const INFO_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.INFO } }, Logger ];\r\nexport const DEBUG_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.DEBUG } }, Logger ];\r\nexport const LOG_LOGGER_PROVIDERS: any[] = [ { provide: Options, useValue: { level: Level.LOG } }, Logger ];","/**\r\n * @module\r\n * @description\r\n * Public API.\r\n */\r\nexport * from \"./app/core/level\";\r\nexport * from \"./app/core/logger\";\r\nexport * from \"./app/core/providers\";"]}